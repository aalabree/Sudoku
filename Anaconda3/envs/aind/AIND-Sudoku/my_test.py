ylim = 2
xlim = 3 
board = [[0] * ylim for _ in range(xlim)]

#for _ in range(xlim):
 #   board = [[0] * ylim]

print(board)

board[-1][-1] = 1
print(board)

#[(x, y) for y in range(ylim) for x in range(xlim)
 #               if board[x][y] == 0]

for y in range(ylim):
    for x in range(xlim):
        if board[x][y] == 0:
            [(x,y)] 
print(board)

rays = [(1, 0), (1, -1), (0, -1), (-1, -1),
                (-1, 0), (-1, 1), (0, 1), (1, 1)]
for dx, dy in rays:
    print("dx" + str(dx))
    print("dy" + str(dy))

parity = [None, None]
print(parity)

[(x, y) for y in range(ylim) for x in range(xlim)
                if board[x][y] == 0]

print([x,y])

for y in range(ylim):
    for x in range(xlim):
        if board[x][y] == 0:
            [(x,y)]

print([x,y])

v = float("-inf")
print(v)
                
"""
        for y in range(ylim):
            for x in range(xlim):
                if self._board[x][y] == 0:
                    return [(x,y)]

#values = {'C8': '7', 'B1': '123456789', 'G9': '123456789', 'H4': '2', 'F8': '123456789', 'B7': '2', 'F3': '123456789', 'F4': '6', 'C2': '123456789', 'F9': '123456789', 'H3': '5', 'H6': '123456789', 'B9': '123456789', 'G8': '123456789', 'A4': '123456789', 'H1': '123456789', 'D5': '123456789', 'C4': '123456789', 'D8': '123456789', 'I6': '123456789', 'B3': '123456789', 'I8': '123456789', 'A9': '123456789', 'B5': '123456789', 'E3': '123456789', 'I9': '3', 'F2': '123456789', 'B6': '6', 'A3': '123456789', 'E8': '123456789', 'E6': '123456789', 'C5': '123456789', 'A7': '123456789', 'E7': '123456789', 'F6': '123456789', 'C9': '123456789', 'F1': '123456789', 'A5': '123456789', 'D9': '123456789', 'D4': '123456789', 'E4': '123456789', 'B8': '123456789', 'H5': '123456789', 'I4': '123456789', 'D7': '123456789', 'G5': '123456789', 'A8': '123456789', 'D6': '8', 'A2': '123456789', 'I1': '123456789', 'A1': '2', 'G6': '123456789', 'I2': '123456789', 'E2': '123456789', 'D2': '123456789', 'G3': '123456789', 'F7': '4', 'C7': '123456789', 'I5': '123456789', 'G7': '8', 'G2': '4', 'A6': '123456789', 'H8': '123456789', 'I7': '123456789', 'C6': '123456789', 'B2': '123456789', 'H7': '123456789', 'E9': '7', 'F5': '123456789', 'G1': '123456789', 'C1': '123456789', 'E5': '9', 'G4': '123456789', 'B4': '123456789', 'H2': '123456789', 'C3': '1', 'E1': '3', 'D1': '123456789', 'H9': '123456789', 'D3': '6', 'I3': '123456789'}
values = {'G6': '123456789', 'B8': '123456789', 'F2': '123456789', 'D8': '123456789', 'B2': '123456789', 'C5': '123456789', 'G5': '123456789', 'D5': '123456789', 'C1': '123456789', 'B7': '2', 'G8': '123456789', 'I2': '123456789', 'D9': '123456789', 'I5': '123456789', 'C3': '1', 'E8': '123456789', 'B6': '6', 'H5': '123456789', 'I4': '123456789', 'F8': '123456789', 'D3': '6', 'E5': '9', 'I1': '123456789', 'G9': '123456789', 'G4': '123456789', 'F7': '4', 'F6': '123456789', 'A2': '123456789', 'G2': '4', 'F4': '6', 'A4': '123456789', 'H4': '2', 'B9': '123456789', 'I3': '123456789', 'H8': '123456789', 'C7': '123456789', 'I7': '123456789', 'F9': '123456789', 'E1': '3', 'H1': '123456789', 'D7': '123456789', 'D4': '123456789', 'I8': '123456789', 'D6': '8', 'E4': '123456789', 'D2': '123456789', 'E2': '123456789', 'E7': '123456789', 'I6': '123456789', 'A7': '123456789', 'A8': '123456789', 'A1': '2', 'C9': '123456789', 'C6': '123456789', 'H6': '123456789', 'H9': '123456789', 'E3': '123456789', 'B1': '123456789', 'A5': '123456789', 'C4': '123456789', 'A6': '123456789', 'D1': '123456789', 'B4': '123456789', 'C2': '123456789', 'B3': '123456789', 'G1': '123456789', 'H3': '5', 'B5': '123456789', 'A9': '123456789', 'I9': '3', 'F1': '123456789', 'F3': '123456789', 'E9': '7', 'E6': '123456789', 'G7': '8', 'C8': '7', 'H2': '123456789', 'A3': '123456789', 'H7': '123456789', 'F5': '123456789', 'G3': '123456789'}

#print(values) 

def cross(a, b):
    "Cross product of elements in A and elements in B."
    return [s+t for s in a for t in b]

rows = 'ABCDEFGHI'
cols = '123456789'
boxes = cross(rows, cols)

width = 0
m = 0
for s in boxes:
    #width = 1+max(len(values[s]))
    width = len(values[s])
    if ( width > m):
        m = width

width = m + 1
print(width) 
#width = 1+max(len(values[s]) for s in boxes)



line = '+'.join(['-'*(width*3)]*3)
print(line)
for r in rows:
    print(''.join(values[r+c].center(width)+('|' if c in '36' else '')for c in cols))
    
    if r in 'CF': print(line)
    print

    
if len([box for box in values.keys() if len(values[box]) == 0]):
    print("HRR")


for box in values.keys():
    if len(values[box] == 0)
"""
